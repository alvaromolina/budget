// schema.prisma

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider          = "zod-prisma-types"
  createInputTypes  = false
  useInstanceOfForDecimal = false
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


model User {
  id            String    @default(cuid()) @id
  name          String?
  email         String?   @unique
  password      String
  accounts      MoneyAccount[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "users")
}

model Bank {
  id            String  @default(cuid()) @id
  name          String
  accounts      MoneyAccount[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "banks")
}

model MoneyAccount {
  id            String  @default(cuid()) @id
  name          String
  accountType   AccountType @default(BANK)
  user          User @relation(fields: [userId], references: [id])
  userId        String
  bank          Bank? @relation(fields: [bankId], references: [id])
  bankId        String?
  balance       Decimal? @default(0)
  transactions  Transaction[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "money_accounts")
}

model BudgetLabel {
  id            String  @default(cuid()) @id
  name          String
  transactions  Transaction[]
}


model Transaction {
  id                    String  @default(cuid()) @id
  value                 Decimal
  dateTransaction       DateTime
  accountId             String
  account               MoneyAccount @relation(fields: [accountId], references: [id])
  budgetLabelId         String?
  budgetLabel           BudgetLabel? @relation(fields: [budgetLabelId], references: [id])
  description           String?
  reference             String?
  additionalReference   String?
  createdAt             DateTime  @default(now()) @map(name: "created_at")
  updatedAt             DateTime  @updatedAt @map(name: "updated_at")
  @@map(name: "transactions")
}

enum AccountType {
  BANK
  CASH
  ASSET
  DEBT
  INVESTMENT
}